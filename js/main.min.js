function initByteFest() { new SmoothScroll('a[href*="#"]', { speed: 800, offset: 80 });function updateCountdown() { const now = new Date();const target = new Date(2025, 5, 9);let diff = Math.max(0, target - now);const days = Math.floor(diff / (1000 * 60 * 60 * 24));diff -= days * (1000 * 60 * 60 * 24);const hours = Math.floor(diff / (1000 * 60 * 60));diff -= hours * (1000 * 60 * 60);const minutes = Math.floor(diff / (1000 * 60));diff -= minutes * (1000 * 60);const seconds = Math.floor(diff / 1000);if (document.body.__x && document.body.__x.$data) { Object.assign(document.body.__x.$data, { countdownDays: days, countdownHours: hours, countdownMinutes: minutes, countdownSeconds: seconds });} } updateCountdown();setInterval(updateCountdown, 1000);const faders = document.querySelectorAll('.fade-in');const observerOpts = { threshold: 0.3, rootMargin: '0px 0px -50px 0px' };const appearOnScroll = new IntersectionObserver((entries, obs) => { entries.forEach(entry => { if (!entry.isIntersecting) return;entry.target.classList.add('visible');obs.unobserve(entry.target);});}, observerOpts);faders.forEach(el => appearOnScroll.observe(el));if (window.particlesJS && document.getElementById('particles-js')) { particlesJS('particles-js', { particles: { number: { value: 60 }, size: { value: 2 }, color: { value: '#3b82f6' }, line_linked: { enable: true, color: '#3b82f6', opacity: 0.2 }, move: { speed: 1 } }, interactivity: { events: { onhover: { enable: true, mode: 'repulse' } } }, retina_detect: true });} const parallaxSections = document.querySelectorAll('[data-parallax="bg"]');if (parallaxSections.length) { const onScroll = () => { const y = window.pageYOffset || document.documentElement.scrollTop;parallaxSections.forEach(el => { el.style.backgroundPosition = `center ${-y * 0.15}px`;});};window.addEventListener('scroll', onScroll, { passive: true });onScroll();} if (window.AOS) { AOS.init({ duration: 800, once: true });AOS.refresh();setTimeout(() => { AOS.refreshHard();}, 100);} } if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', initByteFest);} else { initByteFest();} function initNoticeMarquee() { const track = document.getElementById('noticeTrack');if (track) { const clone = track.cloneNode(true);track.parentElement.appendChild(clone);} } document.addEventListener('DOMContentLoaded', initNoticeMarquee);